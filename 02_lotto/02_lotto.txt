## 프로젝트 설명

- 추첨 버튼을 누르면 1부터 45까지의 숫자 중 6개를 무작위로 선택하여 보여줍니다.
- 다시 버튼을 누르면 기존에 표시되던 6개의 숫자가 사라지고, 다시 추첨할 수 있게 됩니다.


## index.html

- class가 "numbers"인 요소는 추첨 결과를 보여주기 위해 존재하는 요소입니다.
- id가 "draw"인 버튼을 누르면 추첨이 시작됩니다.
- id가 "reset"인 버튼을 누르면 class가 "numbers"인 요소에 표시되던 6개의 숫자가 사라지고, 다시 추첨할 수 있게 됩니다.


## script.js : 요소 선택 및 상수 선언

- numbersDiv는 로또 추첨 결과를 표시하는 영역을 선택한 것입니다.
- drawButton과 resetButton은 각각 추첨 버튼과 다시 버튼을 선택한 것입니다.
- lottoNumbers는 6개의 추첨 번호들이 보관될 배열입니다. 이 배열은 비워졌다 채워졌다를 반복할 수 있습니다. 
- colors는 번호대마다 색깔을 다르게 하기 위해 사용하고픈 색깔들을 미리 정의해 둔 배열입니다.
- colors 배열에서 배경색을 선택해 지정하고, textContent로 숫자도 써줍니다(eachNumDiv).
- appendChild 메소드를 사용해 numbersDiv 안에 추가해줍니다.

## script.js : paintNumber 함수

- 추첨 번호를 인자로 전달받아 그 번호가 쓰여 있는 영역을 생성하고, 이를 화면에 그려주는 함수입니다. 
- createElement로 div 요소를 새로이 생성하고, eachNumDiv라는 이름을 붙입니다.
- 만들어진 eachNumDiv 요소에 class로 eachnum을 추가합니다. 스타일시트 적용을 위함입니다.
- colorIndex는 colors 배열의 몇 번 인덱스에 있는 색깔을 사용할지 결정하는 변수입니다.
- colorIndex는 인자로 전달된 숫자를 10으로 나누어 소수점을 제거한 값입니다. 예를 들어 23이면 2가 되는 것입니다.


## script.js : 추첨 버튼 클릭 이벤트 핸들링

- while문은 추첨 번호가 여섯 개가 될 때까지, 즉 lottoNumbers 배열의 요소가 여섯 개가 될 때까지 추첨 번호를 뽑습니다. 
- 반복을 딱 여섯 번만 하겠다고 정하지 않는 이유는, 번호가 중복되는 경우가 있을 수 있기 때문입니다.
- 번호는 Math.random() 을 통해 1부터 45 중 하나를 랜덤으로 반환합니다. 변수명 ran.
- 번호가 중복될 경우에는 lottoNumbers 배열에 숫자 ran을 추가하면 안 됩니다.
- 배열의 indexOf 메소드는 주어진 값(ran)이 배열에 없을 경우 -1을 반환해주는 메소드입니다.
- indexOf 로부터 -1을 반환받는 경우에만 배열에 새로운 값(ran)을 추가해줄 수 있습니다.
- 새로운 값을 추가해 줄 때는 배열의 push 메소드를 사용합니다. 
- 그리고 새로운 값이 추가될 때마다 그 값을 화면에 그려달라며 paintNumber를 호출하는 것입니다.


## script.js : 다시 버튼 클릭 이벤트 핸들링

- 배열 객체에는 splice 메소드가 있습니다.
- splice(0, 6) 은 0번 인덱스부터 6개를 지워달라는 의미입니다. 즉 배열을 싹 비웁니다.
- 배열을 비운다는 것은 추첨 번호를 모두 없앤다는 의미이므로, 화면에 표시되던 숫자들도 지워줘야 합니다.
- numbersDiv.innerHTML = "" 는 numbersDiv 내부의 모든 내용을 사라지게 합니다.(아무 것도 쓰여있지 않은 문자열을 대입함으로써)
